import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class Weight1 extends javax.swing.JFrame {

    FileReader fr;
    String code;
    private int LineNo = 1;
    File ff;
    
    public Weight1() {
        initComponents();
        jTableDesign();
    }

      public Weight1(File ff) throws IOException {
        initComponents();
        this.ff = ff;

        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setLocationRelativeTo(null);
        jTableDesign();
       

        //setTableData(ff);
        //lineArray();
        //condition(ff);
        
        //Ccs(ff);
    }
     private void jTableDesign() {
        Stable.setRowHeight(40);
        Stable.setShowGrid(true);
        Stable.setGridColor(new Color(153, 153, 255));
        Stable.setSelectionBackground(Color.DARK_GRAY);

        JTableHeader tableHeader = Stable.getTableHeader();
        tableHeader.setBackground(new Color(153, 153, 255));
        tableHeader.setForeground(Color.BLACK);
        tableHeader.setPreferredSize(new Dimension(70, 70));
        tableHeader.setFont(new Font("Arial", Font.BOLD, 12));
    }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        identifier = new javax.swing.JTextField();
        keyword = new javax.swing.JTextField();
        numericalvalue = new javax.swing.JTextField();
        operator = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea1 = new javax.swing.JTextArea();
        fileUpload = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Stable = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        stringliteral = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Perpetua", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Weights related to the size factor");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(310, 60, 730, 42);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(430, 630, 150, 30);

        identifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                identifierActionPerformed(evt);
            }
        });
        jPanel1.add(identifier);
        identifier.setBounds(530, 490, 50, 30);

        keyword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keywordActionPerformed(evt);
            }
        });
        jPanel1.add(keyword);
        keyword.setBounds(530, 460, 50, 30);

        numericalvalue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numericalvalueActionPerformed(evt);
            }
        });
        jPanel1.add(numericalvalue);
        numericalvalue.setBounds(530, 550, 50, 30);

        operator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operatorActionPerformed(evt);
            }
        });
        jPanel1.add(operator);
        operator.setBounds(530, 520, 50, 30);

        jLabel7.setBackground(new java.awt.Color(0, 204, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Program Component------------------------------");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(30, 430, 490, 20);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("-------Weight ");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(460, 430, 130, 20);

        TextArea1.setColumns(20);
        TextArea1.setRows(5);
        jScrollPane1.setViewportView(TextArea1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 160, 550, 260);
        jPanel1.add(fileUpload);
        fileUpload.setBounds(30, 130, 400, 30);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Upload");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(430, 130, 150, 30);

        Stable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Line no", "Program Statements", "Nkw", "Nid", "Nop", "Nnv", "Nsl", "Cs"
            }
        ));
        jScrollPane2.setViewportView(Stable);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(590, 130, 580, 530);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backSmall.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(40, 20, 60, 40);

        stringliteral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stringliteralActionPerformed(evt);
            }
        });
        jPanel1.add(stringliteral);
        stringliteral.setBounds(530, 580, 50, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Keyword");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Identifier");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Operator");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Numerical value");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("String literal");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(13, 13, 13)
                .addComponent(jLabel4)
                .addGap(10, 10, 10)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(7, 7, 7))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(30, 460, 470, 150);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("Create Bar Chart");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(280, 630, 150, 30);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 0, 0));
        jLabel10.setText("Add All weight related dependencies before clicking");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(30, 670, 320, 15);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setText("Reset");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(130, 630, 150, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/world.jpg"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 0, 1430, 800);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) Stable.getModel();
        int Nkw = 0;
        int Nid =0;
        int Nop = 0;
        int Nnv = 0;
        int Nsl =0;
        int Wkw = 0;
        int Wid = 0;
        int Wop = 0;
        int Wnv = 0;
        int Wsl = 0;
        int Cs = 0;
        int count = 0;
        
        FileReader fr = null;
        try {
            fr = new FileReader(ff);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Weight1.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedReader br = new BufferedReader(fr);
        
        String strCurrentLine = null;
        try {
            strCurrentLine = br.readLine();
        } catch (IOException ex) {
            Logger.getLogger(Weight1.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            while ((strCurrentLine = br.readLine()) != null) {
                
                for(int i=0;i<strCurrentLine.length();i++)
                {
                    
                    if(strCurrentLine.trim().startsWith("class")||strCurrentLine.trim().startsWith("public")||strCurrentLine.trim().startsWith("void"))
                    {
                        //Wkw = Integer.parseInt(WD.getText());
                    }
                    else if(strCurrentLine.trim().startsWith("if")||strCurrentLine.trim().startsWith("else if"))
                    {
                        //Wkw = Integer.parseInt(ifElse.getText());
                    }
                    else if(strCurrentLine.trim().startsWith("switch"))
                    {
                        //Wkw = Integer.parseInt(Swvariable.getText());//CaseVariable
                    }
                    else if(strCurrentLine.trim().startsWith("case"))
                    {
                        //Wkw = Integer.parseInt(CaseVariable.getText());
                    }
                    else{
                        
                        //Wkw = 0;
                        
                    }
                    
                }
                
                int total = 0;
                
                total = total + ((strCurrentLine.length() - strCurrentLine.replaceAll("(?<!\\w)if(?!\\w)", "").length()) / 2);
                if(strCurrentLine.trim().startsWith("if")){
                    //if(total > 0)  // 'if' detected
                    {
                        //Detecting &&
                        //total = total + ((strCurrentLine.length() - strCurrentLine.replaceAll("&&", "").length()) / 2);
                        //Detecting &
                        //total = total + ((strCurrentLine.length() - strCurrentLine.replaceAll("(?<!&)&(?![&=])", "").length()));
                        //Detecting ||
                        //total = total + ((strCurrentLine.length() - strCurrentLine.replaceAll("\\|\\|", "").length()) / 2);
                        //Detecting |
                        //total = total + ((strCurrentLine.length() - strCurrentLine.replaceAll("(?<!\\|)\\|(?!\\|)", "").length()));
                        
                        //System.out.println(total);
                    }
                }
                else
                {
                    //System.out.println("No");
                }
                
                for(int i=0;i<Stable.getRowCount();i++){
                    int sumNkw = 0;
                    int sumNid = 0;
                    int sumNop = 0;
                    int sumNnv = 0;
                    int sumNsl = 0;
                    int sumWkw = 0;
                    int sumWid = 0;
                    int sumWop = 0;
                    int sumWnv = 0;
                    int sumWsl = 0;
                    int sumCs = 0;
                    
                if (strCurrentLine.trim().length() != 0) {
                    System.out.println(strCurrentLine);
                    strCurrentLine = strCurrentLine.trim();

                }
                if (strCurrentLine.contains("//")) {
                    System.out.println(strCurrentLine.substring(0, strCurrentLine.indexOf("//")));
                    strCurrentLine = strCurrentLine.substring(0, strCurrentLine.indexOf("//"));
                    
                }  
            }
                
                Wkw = Integer.parseInt(keyword.getText());
                Wid = Integer.parseInt(identifier.getText());
                Wop = Integer.parseInt(operator.getText());
                Wnv = Integer.parseInt(numericalvalue.getText());
                Wsl = Integer.parseInt(stringliteral.getText());
                
                Cs = (Integer.parseInt(keyword.getText()) * new size_1().keywordCount(strCurrentLine)) + (Integer.parseInt(identifier.getText()) * new size_1().identifierCount(strCurrentLine)) + (Integer.parseInt(operator.getText()) * new size_1().operatorCount(strCurrentLine)) + (Integer.parseInt(numericalvalue.getText()) * new size_1().numericalValueCount(strCurrentLine)) + (Integer.parseInt(stringliteral.getText()) * new size_1().stringLiteralsCount(strCurrentLine));
                //int x;
                //keywordCount = Integer.parseInt(new size_1().keywordCount(strCurrentLine));
                Object[] row = {LineNo++, strCurrentLine, new size_1().keywordCount(strCurrentLine), new size_1().identifierCount(strCurrentLine), new size_1().operatorCount(strCurrentLine), new size_1().numericalValueCount(strCurrentLine), new size_1().stringLiteralsCount(strCurrentLine), Cs};            
                model.addRow(row);
                //System.out.println(x);
            }
        } catch (IOException ex) {
            Logger.getLogger(Weight1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    public void setWeightData(File ff) throws IOException {
        Weight1 ne =new  Weight1();
        DefaultTableModel model = (DefaultTableModel) Stable.getModel();
        int Nkw = 0;
        int Nid =0;
        int Nop = 0;
        int Nnv = 0;
        int Nsl =0;
        int Wkw = 0;
        int Wid = 0;
        int Wop = 0;
        int Wnv = 0;
        int Wsl = 0;
        int Cs = 0;
        int count = 0;
        
        FileReader fr = new FileReader(ff);
        BufferedReader br = new BufferedReader(fr);
              
        String strCurrentLine = null;
        strCurrentLine = br.readLine();
       
        while ((strCurrentLine = br.readLine()) != null) {
            {
               
            if(strCurrentLine.trim().startsWith("for")||strCurrentLine.trim().startsWith("while")||strCurrentLine.trim().startsWith("do-while"))
            {
                //Wkw=Integer.parseInt(FWD.getText());                
            }
            else if(strCurrentLine.trim().startsWith("if")||strCurrentLine.trim().startsWith("else if")||strCurrentLine.trim().startsWith("switch"))
            {
                //Wtcs=Integer.parseInt(EIF.getText()); 
            }            
            else if(strCurrentLine.trim().startsWith("case"))
            {
               // Wtcs=Integer.parseInt(CaseV.getText()); 
            }
            else{
                
                Cs=0;
            }
        }
            //formula
            //Cs = (Wkw * Nkw) + (Wid * Nid) + (Wop * Nop) + (Wnv * Nnv) + (Wsl * Nsl);
            
            //Object[] row = {LineNo++, strCurrentLine, new size_1().keywordCount(strCurrentLine), new size_1().identifierCount(strCurrentLine), new size_1().operatorCount(strCurrentLine), new size_1().numericalValueCount(strCurrentLine), new size_1().stringLiteralsCount(strCurrentLine)};            
            //model.addRow(row);      
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser jf = new JFileChooser();
        int aa = jf.showOpenDialog(null);

        if(aa == JFileChooser.APPROVE_OPTION){
            char cbuf[] = null;
            ff = jf.getSelectedFile();
            fileUpload.setText(ff.getName());

            try {
                fr = new FileReader(ff);
                TextArea1.read(fr, "");
                code = TextArea1.getText();
            } catch (Exception ex) {
                Logger.getLogger(interface01.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    fr.close();
                } catch (IOException ex) {
                    Logger.getLogger(interface01.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       setVisible(false);
       new interface01().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void identifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_identifierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_identifierActionPerformed

    private void keywordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keywordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_keywordActionPerformed

    private void numericalvalueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numericalvalueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numericalvalueActionPerformed

    private void operatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operatorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_operatorActionPerformed

    private void stringliteralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stringliteralActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stringliteralActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        int WkwC=0;
        int WidC=0;
        int Wop =0;
        int Wsl=0;
        int Wnv=0;
        WkwC = Integer.parseInt(keyword.getText());
        WidC = Integer.parseInt(identifier.getText());
        Wop = Integer.parseInt(operator.getText());
        Wnv = Integer.parseInt(numericalvalue.getText());
        Wsl = Integer.parseInt(stringliteral.getText());
  
            DefaultCategoryDataset dataset = new DefaultCategoryDataset( );
        

            dataset.setValue(WkwC, "Weight", "Wkw");
            dataset.setValue(WidC, "Weight", "Wid");
            dataset.setValue(Wop, "Weight", "Wop");
            dataset.setValue(Wnv, "Weight", "Wnv");
            dataset.setValue(Wsl, "Weight", "Wsl");
           
            
            JFreeChart chart = ChartFactory.createBarChart3D("Size", "Factors", "Weightage", dataset, PlotOrientation.VERTICAL, false, true, false);
            CategoryPlot p = chart.getCategoryPlot();
            ChartFrame frame = new ChartFrame("Bar Chart for Size", chart);
            frame.setVisible(true);
            frame.setSize(600,550);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       
        fileUpload.setText("");
        TextArea1.setText("");
        keyword.setText("");
        identifier.setText("");
        operator.setText("");
        numericalvalue.setText("");
        stringliteral.setText("");
        Stable.setModel(new DefaultTableModel(null, new String[]{"Line no", "Program statements", "Nkw", "Nid", "Nop", "Nnv", "Nsl", "Cs"}));
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Size.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Size.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Size.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Size.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Weight1().setVisible(true);
            }
        });
    }
        
        
        
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Stable;
    private javax.swing.JTextArea TextArea1;
    private javax.swing.JTextField fileUpload;
    private javax.swing.JTextField identifier;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField keyword;
    private javax.swing.JTextField numericalvalue;
    private javax.swing.JTextField operator;
    private javax.swing.JTextField stringliteral;
    // End of variables declaration//GEN-END:variables
}      
